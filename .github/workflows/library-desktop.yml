name: .NET Core CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "YourStrongPassw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: > 
          --health-cmd "exit 0" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5 

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Wait for SQL Server to be up and running
      run: |
        echo "Waiting for SQL Server to be available..."
        for /L %%i in (1,1,30) do (
            powershell -command "try { $client = New-Object System.Net.Sockets.TcpClient('localhost', 1433); if ($client.Connected) { $client.Close(); exit 0 } } catch { Start-Sleep -Seconds 1 }"
        )
        echo "SQL Server is up and running"

    - name: Restore dependencies
      run: dotnet restore RebtelAssessmentPackage.sln

    - name: Build solution
      run: dotnet build RebtelAssessmentPackage.sln --configuration ${{ matrix.configuration }} --no-restore

    - name: Run tests
      env:
        ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=TestDatabase;User=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;"
      run: dotnet test RebtelAssessmentPackage.sln --configuration ${{ matrix.configuration }} --no-build --verbosity normal

    - name: Publish Grpc and API projects
      run: |
        dotnet publish src/Library.Grpc/Library.Grpc.csproj --configuration ${{ matrix.configuration }} --no-build --output publish/Library.Grpc
        dotnet publish src/Library.Api/Library.Api.csproj --configuration ${{ matrix.configuration }} --no-build --output publish/Library.Api

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Published Projects
        path: |
          publish/Library.Grpc
          publish/Library.Api
